Metadata-Version: 1.0
Name: InterviewTest
Version: 0.1.dev0
Summary: API-enabled Gene Annotation.
Home-page: UNKNOWN
Author: J. Arnold
Author-email: jimmyjamesarnold@gmail.com
License: Creative Commons Attribution-Noncommercial-Share Alike license
Description: ===========
        annoPipeline - a gene annotation pipeline
        ===========
        
        Interview Test uses APIs from mygene.info and entrez to annotate a given list of genes. 
        Currently generates a pandas DataFrame with gene symbol, gene name, EntrezID, and bibliographic info for up to 5 publications in pubmed where the gene was mentioned. 
        You might find it useful for tasks involving analyzing publication trends or finding influential PIs for a given gene. 
        Typical usage often looks like this::
        
            #!/usr/bin/env python
        
            import annoPipeline
        
            geneList = ['CDK2', 'FGFR1', 'SLC6A4']
        
            # annoPipeline will execute full pipeline
            bib_df = annoPipeline(geneList) # returns df with annotations for gene and bibliographic info.
        
        
        Problems Solved in 0.1
        ======================
        
        Task 1
        -------
        1.  From the MyGeneInfo API, use the “Gene query service" GET method to return details on the following GENE symbols, filtered for species, “human":   CDK2, FGFR1, SLC6A4
        2.  From the returned json, parse out the “name", “symbol" and “entrezgene" values and print to screen
        
        Use queryGene() like this::
        
            #!/usr/bin/env python
        
            import annoPipeline.queryGenes as queryGenes
        
            geneList = ['CDK2', 'FGFR1', 'SLC6A4']
        
            # will return list of dicts where keys are default mygene fields (symbol,name,taxid,entrezgene,ensemblgene)
            queryRes = qr(geneList) 
        
        
        Task 2: 
        -------
        1. 	Using the appropriate identifier from the above result, send a query to the MyGeneInfo “Gene annotation services" method for each gene
        2.	From the resulting json, collate up to 5 generif descriptions per gene
        3.	Write the results to an Excel spreadsheet with columns: gene_symbol, gene_name, entrez_id, generifs
        
        Use getAnno() and mergeWrite() like this::
        
            #!/usr/bin/env python
        
            import annoPipeline.queryRes as queryGenes
            import annoPipeline.getAnno as getAnno
            import annoPipeline.mergeWrite as mergeWrite
        
            geneList = ['CDK2', 'FGFR1', 'SLC6A4']
            queryRes = queryGene(geneList)
        
            # will return df with genes and up to 5 generifs from mygene.info
            pubc = getAnno(queryRes) 
        
            # will return collated pubc merged with queryResult, writes Excel file with geneList input separated by '_'. 
            df = mergeWrite(queryRes, pubc) 
        
        
        Task 3:
        -------
        1.  Use the Pubmed IDs associated with the above generif content to extract additional bibliographic information.
        
        Use addBibs() like this::
        
            #!/usr/bin/env python
        
            import annoPipeline.queryRes as queryGenes
            import annoPipeline.getAnno as getAnno
            import annoPipeline.mergeWrite as mergeWrite
            import annoPipeline.addBibs as addBibs
        
            geneList = ['CDK2', 'FGFR1', 'SLC6A4']
            queryRes = queryGene(geneList)
            pubc = getAnno(queryRes)
            df = mergeWrite(queryRes, pubc)
        
            dfb = addBibs(df)
        
            # will return df with genes and up to 5 generifs from mygene.info
             
        
            # will return collated pubc merged with queryResult, writes Excel file with geneList input separated by '_'. 
             
        
        
Platform: UNKNOWN
